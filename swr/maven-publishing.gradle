task androidSourcesJar(type: Jar) {
    archiveClassifier.set('sources')
    from android.sourceSets.main.java.srcDirs
    from android.sourceSets.main.kotlin.srcDirs
}
artifacts {
    archives androidSourcesJar
}


File localProperties = project.rootProject.file('local.properties')
Properties properties = new Properties()
def isLocal = localProperties.exists()
if (isLocal) {
    properties.load(new FileInputStream(localProperties))
}
ext['signing.keyId'] = isLocal ? properties.getProperty('signing.keyId') :
        System.getenv('SIGNING_KEY_ID')
ext['signing.password'] = isLocal ? properties.getProperty('signing.password') :
        System.getenv('SIGNING_PASSWORD')
ext['signing.secretKeyRingFile'] = isLocal ? properties.getProperty('signing.secretKeyRingFile') :
        System.getenv('SIGNING_SECRET_KEY_RING_FILE')
ext['ossrhUsername'] = isLocal ? properties.getProperty('ossrhUsername') :
        System.getenv('OSSRH_USERNAME')
ext['ossrhPassword'] = isLocal ? properties.getProperty('ossrhPassword') :
        System.getenv('OSSRH_PASSWORD')
ext['sonatypeStagingProfileId'] = isLocal ? properties.getProperty('sonatypeStagingProfileId') :
        System.getenv('SONATYPE_STAGING_PROFILE_ID')

afterEvaluate {
    publishing {
        publications {
            release(MavenPublication) {
                from components.release
                artifact androidSourcesJar

                groupId = 'dev.burnoo'
                artifactId = 'compose-swr'
                version = lib_version

                pom {
                    name = 'compose-swr'
                    description = 'React SWR port for Compose'
                    url = 'https://github.com/burnoo/compose-swr'
                    licenses {
                        license {
                            name = 'The Apache License, Version 2.0'
                            url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                        }
                    }
                    developers {
                        developer {
                            id = 'burnoo'
                            name = 'Bruno Wieczorek'
                            email = 'bruno.wieczorek@gmail.com'
                        }
                    }
                    scm {
                        connection = 'scm:git:github.com/burnoo/compose-swr.git'
                        developerConnection = 'scm:git:ssh://github.com/burnoo/compose-swr.git'
                        url = 'https://github.com/burnoo/compose-swr/tree/master'
                    }
                }
            }
        }
        repositories {
            maven {
                name = "sonatype"

                def releasesRepoUrl = "https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/"
                def snapshotsRepoUrl = "https://s01.oss.sonatype.org/content/repositories/snapshots/"
                url = version.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl

                credentials {
                    username ossrhUsername
                    password ossrhPassword
                }
            }
        }
    }
}

signing {
    sign publishing.publications
}